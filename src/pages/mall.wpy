<style lang="less">
@import '../static/style/soundComTips.less';
@import '../static/style/cardComItem.less';
@import '../static/style/tabCom.less';
.page-mall {
  padding: 0 38rpx;
  .tab-wrap {
    border: 1px solid #85d1ea;
    height: 860rpx;
    box-shadow: inset 0 0 10rpx 3rpx #405784;
    background-color: #475881;
    .content {
      display: flex;
      justify-content: space-between;
      flex-wrap: wrap;
      align-items: center;
      text-align: center;
      padding: 0 66rpx;
    }
  }
}
</style>
<template>
  <view class="page-mall">
     <view class="sound-com-tips">
      <view class="sound"><image src="../static/img/dynamics/sound.png" mode="aspectFit" style="width:30rpx;height:27rpx;"/></view>
      <view class="msg-wrap">
      <view class="msg-cont" style="transform: translateY(-{{marqueeDistance}}px);transition: transform {{transitionTime}}ms;">
      <repeat for="{{msgList}}" key="index" index="index" item="item">
            <text>{{item.MsgInfo}}</text>
      </repeat>
      </view>
      </view>
      </view>
      <view class="tab-wrap">
        <view class="tab-com">
           <repeat for="{{tabArr}}" key="index" index="index" item="item">
             <view class="{{item.t_active==1?'active':''}}" @tap="handleClickTab({{index}})">{{item.t_name}}</view>
            </repeat>
        </view>
        <scroll-view scroll-y="true" style="height: 700rpx;padding-top:56rpx;" scroll-top="{{scrollTop}}">
          <view class="content" >
          <repeat for="{{contList}}" key="index" index="index" item="item">
             <view class="card-com-item"  @tap="handleClick({{item}})">
             <view class="txt">
                      <view class="top">{{item.PrdtName}}</view>
                      <image class="mid" src="{{imgHost+item.PrdtPic}}" mode="aspectFit" style="width:96rpx;height:96rpx"/>
                      <view class="btm">
                        <view class="btm-point">{{item.Point}}积分</view>
                        <view class="btm-ex" style="color:#fffd78;padding-left:48rpx;" @tap.stop="handleClickExchange({{item}})">兑换</view>
                      </view>
               </view>
              </view>
               </repeat>
              </view>
          </scroll-view>
      </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import wxRequest from '../util/wxRequest.js';
export default class pageMall extends wepy.page {
  config = {
    navigationBarTitleText: '商城'
  };
  components = {};
  data = {
    timeOut:null,
    interval:null,
    transitionTime:300,
    marqueeDistance:0,
    msgList:[],
    scrollTop:0,
    tabArr: [
      { t_name: '学习类', t_active: 1 },
      { t_name: '特权类', t_active: 0 },
      { t_name: '礼品类', t_active: 0 },
      { t_name: '其他类',  t_active: 0 }
    ],
    contList: []
  };

  computed = {
    imgHost(){
        return this.$parent.globalData.imgHost
    }
    
  };

  methods = {
    handleClickExchange(item) {
      console.log(item);
      wx.showToast({
        title: '兑换弹窗',
        icon: 'success',
        duration: 2000
      });
    },
    handleClickTab(inx) {
      this.tabArr.map((item, index) => {
        index == inx ? (item.t_active = 1) : (item.t_active = 0);
      });
      this.getProduct(this.tabArr[inx].t_name)
    },
    handleClick(item) {
      this.$navigate('/pages/mall/goodsDetail?data='+JSON.stringify(item));
    },
    handleClickJump(path) {
      this.$navigate(path);
    }
  };

  events = {};
  scrollTxtY(){
    const winWidth=(this.$parent.globalData.systemInfo.windowWidth);
    const pixel=winWidth/750;
    const lens=this.msgList.length;
    const dis=parseInt(40*pixel);
    let i=0;
    if(lens==0) this.msgList.push({MsgInfo:"暂无消息"});
    if(lens<2) return; //小于两条不执行
    clearInterval(this.interval);
    this.interval = setInterval(()=>{
         i++;
         this.transitionTime=300;
         this.marqueeDistance=dis*i;
         if(i==lens-1){
          clearTimeout(this.timeOut);
           this.timeOut=setTimeout(()=>{
             i=0;
             this.transitionTime=0;
             this.marqueeDistance=0;
             this.$apply();
           },300)
         }
         this.$apply();
    },5000)
  }
  async getProduct(type) {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'getProduct',
        type:type
      }
      },that.$parent.globalData.apiUrl);
     if (res.data.retcode == 0) {
        that.setData({
          scrollTop: 0
        })
        that.contList=res.data.result
      }else{
         that.contList=[];
         wx.showToast({
            title: res.data.msg,
            icon: 'none',
            duration: 2000
          })
      }
      this.$apply();
  }
  onLoad() {
    this.getProduct("学习类");
    this.scrollTxtY();
  }
}
</script>
