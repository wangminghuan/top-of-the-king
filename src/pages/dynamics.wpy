<style lang="less">
@import '../static/style/soundComTips.less';
@import '../static/style/comAvator.less';
.page-dynamics {
  padding: 0 40rpx 40rpx 40rpx;
  .special-title {
    height: 88rpx;
    width: 100%;
    background-color: rgba(255, 255, 255, 0.2);
    position: relative;
    text-align: center;
    margin-bottom: 12rpx;
    text {
      line-height: 88rpx;
      color: #f1f4ba;
      font-size: 28rpx;

      &::after,
      &::before {
        content: '';
        width: 12rpx;
        height: 12rpx;
        border: 2rpx solid #f1f4ba;
        position: absolute;
        transform: rotateZ(45deg);
        top: 36rpx;
      }
      &::after {
        left: 260rpx;
      }
      &::before {
        right: 260rpx;
      }
    }
  }
  .special-item {
    width: 99%;
    height: 270rpx;
    overflow: hidden;
    border: 2rpx solid #50baf2;
    margin-bottom: 20rpx;
    position: relative;
    image {
      width: 100%;
    }
    .btm {
      position: absolute;
      bottom: 0;
      width: 100%;
      height: 70rpx;
      background-color: rgba(0, 0, 0, 0.5);
      padding-left: 44rpx;
      line-height: 70rpx;
      text {
        display: block;
        width: 370rpx;
        overflow: hidden;
        text-overflow: ellipsis;
        color: #fff;
        font-size: 24rpx;
        white-space: nowrap;
      }
    }
  }
  .post-item-wrap {
    background-color: #4b6992;
    padding: 0 45rpx;
    .title {
      height: 96rpx;
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1rpx solid #3b8dc5;
      text {
        color: #f1f4ba;
        font-size: 30rpx;
      }
    }
    .post-item {
      display: flex;
      justify-content: space-between;
      border-bottom: 1rpx solid #3b8dc5;
      padding-bottom: 10rpx;
      &:last-child{
        border-bottom: none;
      }
      .imglist{
        display: flex;
        justify-content: flex-start;
        flex-wrap: wrap;
        image{
          width: 144rpx;
          height: 144rpx;
          margin-top:10rpx;
        }
        image.mids{
          margin-left:10rpx;
          margin-right:10rpx;
        }
      }
      .rt {
        width: 456rpx;
        .name {
          line-height: 54rpx;
          font-size: 26rpx;
          color: #f1f4ba;
          margin-top: 16rpx;
        }
        .content {
          line-height: 30rpx;
          font-size: 24rpx;
          color: #cbe3f7;
        }
        .time {
          height: 46rpx;
          display: flex;
          justify-content: space-between;
          color: #fff;
          align-items: center;
          font-size: 22rpx;
          margin-bottom: 10rpx;
          position: relative;
          // .t-lf, .t-rt{
          //     position: absolute;
          //     top:50%;
          //     transform: translateY(-50%);
          //     left:0;

          // }
          .t-rt{
            width: 50rpx;
            height: 46rpx;
            position: relative;
            image{
              position: absolute;
              right: 0;
              top:50%;
              display: block;
              left:0;
              right: 0;
              margin:0 auto;
              transform: translateY(-50%);
            }
            .t-pop{
              position: absolute;
              top:50%;
              transform: translateY(-50%);
              left:-172rpx;
              padding:0 10rpx;
              background-color: #000;
              height:46rpx ;
              display: flex;
              justify-content: space-between;
              align-items: center;
              transition: width 1s;
              width:0;
            }
            .t-pop-show{
               width:150rpx;
            }
          }
        }
        
        .discuss {
          background-color: #3e76ab;

          color: #fff;
          padding: 0 30rpx;
          .top {
            //  height: 50rpx;
            display: flex;
            padding-top: 10rpx;
            padding-bottom: 10rpx;
            justify-content: flex-start;
            align-items: center;
            flex-wrap: wrap;
            line-height: 34rpx;
            border-bottom: 1rpx solid #236d88;
            image {
              margin-right: 8rpx;
            }
            text {
              font-size: 20rpx;
              padding: 0 8rpx;
            }
          }
          .btm {
            padding-bottom: 10rpx;
            margin-bottom: 30rpx;
          }
          .btm-item {
            padding-top: 10rpx;
            padding-bottom: 10rpx;
            // display: flex;

            text {
              line-height: 36rpx;
              font-size: 24rpx;
            }
            .btm-name {
              color: #b4bfa9;
              flex-shrink: 0;
            }
          }
        }
      }
    }
  }
  .pop-shake {
    .bg {
      position: fixed;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.4);
      z-index: 99;
    }
    .shake-bg {
      position: fixed;
      top: 0;
      right: 0;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      z-index: 1000;
    }
    .pop-cont {
      width: 640rpx;
      height: 640rpx;
      position: fixed;
      margin: 0 auto;
      top: 50%;
      right: 0;
      left: 0;
      transform: translateY(-50%);
      z-index: 1001;
      .close{
        position: absolute;
        width: 40rpx;
        height: 40rpx;
        right:0;
        top:0;
        z-index: 99999;
      }
      text {
        //  height: 70rpx;
        width: 420rpx;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        position: absolute;
        top: 272rpx;
        left: 0;
        right: 0;
        margin: 0 auto;
        color: #fff;
        font-size: 24rpx;
        text-align: center;
      }
    }
    .animate-bg,
    .gift-bg {
      width: 640rpx;
      height: 640rpx;
      position: absolute;
      top: 0;
      left: 0;
    }
    .animate-bg {
      animation: mymove 8s linear infinite;
    }
  }
  @keyframes mymove {
    0% {
      transform: rotateZ(0);
    }
    100% {
      transform: rotateZ(360deg);
    }
  }
  .btm-input{
    background-color: #eee;
    position: fixed;
    bottom: 0;
    width: 100%;
    left:0;
    height: 90rpx;
    align-items: center;
    font-size:28rpx; 
    display: flex;
    justify-content: space-between;
    // padding: 0 20rpx;
    input{
      width: 550rpx;
      padding-left: 20rpx;
    }
    button{
      margin:0;
      margin-right: 20rpx;
    }
  }
}
</style>
<template>
  <view class="page-dynamics">
    <view class="sound-com-tips">
      <view class="sound"><image src="../static/img/dynamics/sound.png" mode="aspectFit" style="width:30rpx;height:27rpx;"/></view>
      <view class="msg-wrap">
      <view class="msg-cont" style="transform: translateY(-{{marqueeDistance}}px);transition: transform {{transitionTime}}ms;">
      <repeat for="{{msgList}}" key="index" index="index" item="item">
            <text>{{item.MsgInfo}}</text>
      </repeat>
      </view>
      </view>
      </view>
     <view class="special-title" wx:if="{{specialList.length>0}}"><text>专题栏</text></view>
     <scroll-view scroll-y style="height: 588rpx;margin-bottom:4rpx;" wx:if="{{specialList.length>0}}">
     <repeat for="{{specialList}}" key="index" index="index" item="item">
        <view class="special-item" @tap="handleJumpArticle({{item.Id}})">
           <image src="{{imgHost+item.Pic}}" mode="widthFix" />
           <view class="btm"><text>{{item.Tile}}</text></view>
        </view>
    </repeat>
    </scroll-view>
    <view class="post-item-wrap">
       <view class="title">
         <text>帖子</text>
         <image @tap="handleJumpAdd" src="../static/img/dynamics/edit.png" mode="aspectFit" style="width:35rpx;height:36rpx;"/>
       </view>
       <repeat for="{{postList}}" key="index" index="index" item="item">
        <view class="post-item">
           <view class="com-avator" style="margin-top: 36rpx;"><image  src="{{item.HeadImg}}" mode="scaleToFill" /></view>
           <view class="rt">
             <view class="name" @tap="handleJumpDetail({{item.Id}})">{{item.NickName}}</view>
             <view class="content" @tap="handleJumpDetail({{item.Id}})">{{item.Txt}}</view>
             <view class="imglist">
             <repeat for="{{item.PicList}}" key="sindex" index="sindex" item="sitem">
                 <image class="{{sindex%3==1?'mids':''}}" @tap="handlePreviewImg({{imgHost + sitem.Pic}},{{index}})" src="{{imgHost + sitem.Pic}}" mode="scaleToFill" />
              </repeat>
              </view>
             <view class="time">
               <text class="t-lf" @tap="handleJumpDetail({{item.Id}})">{{item.CreateDate}}</text>
               <view class="t-rt" @tap="handleReview({{index}})">
                 <image src="../static/img/dynamics/msg.png" mode="aspectFit" style="width:31rpx;height:29rpx;"/>
                 </view>
               
             </view>
             <view class="discuss">
                  <view class="top" wx:if="{{item.LikeList.length>0}}">
                    <image  src="../static/img/dynamics/like.png" mode="aspectFit" style="width:22rpx;height:20rpx;"/>
                    <repeat for="{{item.LikeList}}" key="sindex" index="sindex" item="sitem">
                      <text>{{sitem.NickName}}</text>
                    </repeat>
                  </view>
                  <view class="btm" wx:if="{{item.ReviewList.length>0}}">
                    <repeat for="{{item.ReviewList}}" key="dindex" index="dindex" item="ditem">
                      <view class="btm-item">
                        <text class="btm-name">{{ditem.NickName+"："}}</text><text>{{ditem.ReviewTxt}}</text>
                      </view>
                    </repeat>
                  </view>
             </view>
           </view>
        </view>
        </repeat>
    </view>
    <view class="pop-shake" catchtouchmove="preventTouchMove" wx:if="{{isShowPop}}">
       <view class="bg"></view>
        <image class="shake-bg" src="../static/img/dynamics/shake2.gif" mode="scaleToFill" />
         <view class="pop-cont">
         <image class="close" src="../static/img/dynamics/close.png" mode="scaleToFill" @tap="handleClosePop" />
         <image class="animate-bg" src="../static/img/dynamics/light-ani.png" mode="scaleToFill" />
         <image class="gift-bg" src="{{popArr[0].ShowType==1?'../static/img/dynamics/shangcheng.png':popArr[0].ShowType==2?'../static/img/dynamics/duanwei.png':popArr[0].ShowType==3?'../static/img/dynamics/chenghao.png':'../static/img/dynamics/zhanli.png'}}" mode="scaleToFill" />
         <text>{{popArr[0].MsgInfo}}</text>
       </view>
    </view>
    <view wx:if="{{isShowReview}}" class="btm-input" >
      <input confirm-type="send" type="text" auto-focus bindinput="bindUserInput" bindblur="bindUserBlur" />
      <button type="primary" size="mini"  @tap="handleLeaveMsg" >发送</button>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import wxRequest from '../util/wxRequest.js';
export default class pageDynamics extends wepy.page {
  config = {
    navigationBarTitleText: '动态',
    enablePullDownRefresh:true,
  };
  components = {};
  data = {
    isWaitingPop:false,//是否等待弹窗中
    isOperating:false,//是否处于操作中
    isShowReview:false,//展示回复框
    userInput:"",
    timeOut:null,
    interval:null,
    transitionTime:300,
    marqueeDistance:0,
    isShowPop: false,
    msgList:[],
    popArr:[], //需要弹窗队列
    specialList: [],
    nowActive:-1,
    postList: []
  };
 watch = {
      isOperating (curVal, oldVal) {
        //当操作值从true 变为false ，并且检测到弹幕暂停了就弹出弹幕
        console.log([curVal,oldVal,this.isWaitingPop,this.popArr[0].MsgInfo])
        if(!curVal && oldVal && this.isWaitingPop && this.popArr[0].MsgInfo && this.popArr[0].MsgInfo!=""){
            this.isShowPop=true;
            this.isWaitingPop=false;
            this.$apply();
        }
      }
    }
 computed = {
    heroInfo(){
        return this.$parent.globalData.HeroInfo
    },
    imgHost(){
        return this.$parent.globalData.imgHost
    }
  };

  methods = {
    //发送评论
    handleLeaveMsg(){
       if(this.userInput.replace(/\s+/g,'')==''){
          wx.showToast({
            title: "评论内容不能为空",
            icon: 'none',
            duration: 2000
          });
         return ;
      }
       this.addPostReView(this.nowActive)
    },
    bindUserInput(e){
      this.userInput=e.detail.value;
    },
     bindUserBlur(e){
       setTimeout(() => {
         this.isShowReview=false;
         this.isOperating=false;
         this.$apply();
       }, 10);
    },
    handleReview(inx){
      const that=this;
      this.isOperating=true; //处于操作中
      this.nowActive=inx;
      this.checkPostLike(this.nowActive,(code)=>{
        wx.showActionSheet({
        itemList: [code==0?'已点赞':'点赞', '评论',],
        success: function(res) {
          if(res.tapIndex==0){
               if(code!=0){
                 //点赞逻辑
                 that.addPostLike(that.nowActive);
                 return;
               }
          }else{
            setTimeout(()=>{
              that.isShowReview=true;
               that.$apply();
            },30)
          }
         
        },
        fail: function(res) {
          that.isOperating=false; //操作状态失效
        }
       })
      })
    },
    // 图片预览
    handlePreviewImg(url,inx){
      const that=this;
      let urlsArr=[];
      that.postList[inx].PicList.map((item)=>{
           urlsArr.push(that.imgHost+item.Pic);
      })
        wx.previewImage({
        current: url, // 当前显示图片的http链接
        urls: urlsArr // 需要预览的图片http链接列表
      }) 
    },
    //关闭弹窗
    handleClosePop(){
       this.isShowPop=false;
       if(this.popArr.length==0) return;
       this.setMessageRead(this.popArr[0].Id);
       setTimeout(()=>{
          this.popArr.splice(0,1);
          if(this.popArr.length>0 && this.popArr[0].MsgInfo && this.popArr[0].MsgInfo!=""){
            //如果处于操作中就暂停弹出特效
            if(this.isOperating){
              this.isWaitingPop=true;
              this.$apply();
            }else{
               this.isShowPop=true;
               this.$apply();
            }
           
          }
        },5000)
    },
    preventTouchMove() {},
    handleJumpArticle(id){
       this.$navigate('/pages/articleDetail?id='+(id?id:1));
    },
    handleJumpDetail(id) {
      this.$navigate('/pages/dynamics/detail?id='+id);
    },
    handleJumpAdd() {
      this.$navigate('/pages/dynamics/add');
    }
  };
//下拉刷新
  onPullDownRefresh(){
    this.getMessage();
    this.getArticle();
    this.getPostAllInfo();
     setTimeout(() => {
         wx.stopPullDownRefresh()
       }, 1000);
  }
  events = {};
   scrollTxtY(){
    const winWidth=(this.$parent.globalData.systemInfo.windowWidth);
    const pixel=winWidth/750;
    const lens=this.msgList.length;
    const dis=parseInt(40*pixel);
    let i=0;
    if(lens<2) return; //小于两条不执行
    clearInterval(this.interval);
    this.interval = setInterval(()=>{
         i++;
         this.transitionTime=300;
         this.marqueeDistance=dis*i;
         if(i==lens-1){
          clearTimeout(this.timeOut);
           this.timeOut=setTimeout(()=>{
             i=0;
             this.transitionTime=0;
             this.marqueeDistance=0;
             this.$apply();
           },300)
         }
         this.$apply();
    },5000)
  }
  getPopArr(arr){
     let popArr=[];
     arr.map((item)=>{
         if(item.ReadStatus==0){
           popArr.push(item)
         }
     })
     this.popArr=popArr;
  }
  
  //设置消息已读
  async setMessageRead(msgid) {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'setMessageRead',
        msgid:msgid,
        userid:that.$parent.globalData.HeroInfo.Id,
      }
      },that.$parent.globalData.apiUrl);
  }
  //查询点赞 
  async checkPostLike(indx,callback) {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'checkPostLike',
        userid:that.$parent.globalData.HeroInfo.Id,
        postid:that.postList[indx].Id,
      }
      },that.$parent.globalData.apiUrl);
      callback(res.data.retcode)
  }
  //点赞
  async addPostLike(indx) {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'addPostLike',
        userid:that.$parent.globalData.HeroInfo.Id,
        postid:that.postList[indx].Id,
      }
      },that.$parent.globalData.apiUrl);
   if (res.data.retcode == 0) {
        wx.showToast({
          title: '点赞成功',
          icon: 'success',
          duration: 2000
      });
      this.postList[indx].LikeList.push({
       NickName:that.$parent.globalData.HeroInfo.UserName
      })
    }else{
       this.$parent.showErrorMsg("错误提示", res.data.msg);
    }
    this.isOperating=false;
    this.$apply();
  }
  //评论
  async addPostReView(indx) {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'addPostReView',
        postid:that.postList[indx].Id,
        userid:that.$parent.globalData.HeroInfo.Id,
        txt:that.userInput,
      }
      },that.$parent.globalData.apiUrl);
   if (res.data.retcode == 0) {
         wx.showToast({
          title: '评论成功',
          icon: 'success',
          duration: 2000
        });
        this.postList[indx].ReviewList.push({
          NickName:that.$parent.globalData.HeroInfo.UserName,
          ReviewTxt:that.userInput
        })
        this.userInput=""
    }else{
        this.$parent.showErrorMsg("错误提示", res.data.msg);
    }
    this.$apply();
  }
  //顶部动态消息
  async getMessage() {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'getMessage',
        userid:that.$parent.globalData.HeroInfo.Id,
        num:6,
      }
      },that.$parent.globalData.apiUrl);
   if (res.data.retcode == 0) {
        const arr=res.data.result;
        if(arr instanceof Array && arr.length>0){
               that.msgList=arr.concat(arr[0]);
               that.getPopArr(arr);
               if(that.popArr.length>0){
                 setTimeout(()=>{
                   that.isShowPop=true;
                 },5000)
               }
        }else{
           that.msgList=[{
             MsgInfo:"暂无最新动态"
           }];
        }
        that.scrollTxtY();
    }
    this.$apply();
  }
  //获取专题
  async getArticle() {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'getArticle'
      }
      },that.$parent.globalData.apiUrl);
   if (res.data.retcode == 0) {
        this.specialList=res.data.result;
    }else{
      this.specialList=[]
    }
    this.$apply();
  }
  //获取帖子列表
  async getPostAllInfo() {
    const that = this;
    const res = await wxRequest({
      query:{
        opt: 'getPostAllInfo',
        num:99
      }
      },that.$parent.globalData.apiUrl);
   if (res.data.retcode == 0) {
        this.postList=res.data.result
    }
    this.$apply();
  }
  onLoad(){
    this.getMessage();
  }
  onShow() {
   this.getArticle();
   this.getPostAllInfo();
  }
}
</script>
